#!/bin/bash +xe
REPO_NAME=`pushd ${WORKSPACE}/build >/dev/null && git remote show origin -n | grep "Fetch URL:" | sed "s#^.*/\(.*\).git#\1#" && popd > /dev/null`
if [ -e "${REPO_NAME}/sonar.properties.in" ]; then
  echo "Generating sonar.properties file from template"
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat ${REPO_NAME}/sonar.properties.in | sed -f sed.script > sonar.properties
  rm sed.script
fi

echo "Generating post-result.py file from template"
env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
cat post-result.py.in | sed -f sed.script > post-result.py
chmod oug+x post-result.py
rm sed.script

echo "Generating config.ini file from template"
env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
cat config.ini.in | sed -f sed.script > config.ini
chmod oug+x config.ini
rm sed.script

echo "Generating test script file from template"
if [ -e "${REPO_NAME}/test.sh.in" ]; then
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat ${REPO_NAME}/test.sh.in | sed -f sed.script > test.sh
  chmod oug+x test.sh
  rm sed.script
else
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat test.sh.in | sed -f sed.script > test.sh
  chmod oug+x test.sh
  rm sed.script
fi

echo "Generating unit-test script file from template"
if [ -e "${REPO_NAME}/unit-test.sh.in" ]; then
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat ${REPO_NAME}/unit-test.sh.in | sed -f sed.script > unit-test.sh
  chmod oug+x unit-test.sh
  rm sed.script
else
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat unit-test.sh.in | sed -f sed.script > unit-test.sh
  chmod oug+x unit-test.sh
  rm sed.script
fi

echo "Generating pre deployment file from template"
if [ -e "${REPO_NAME}/pre-deploy.sh.in" ]; then
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat ${REPO_NAME}/pre-deploy.sh.in | sed -f sed.script > pre-deploy.sh
  chmod oug+x pre-deploy.sh
  rm sed.script
else
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat pre-deploy.sh.in | sed -f sed.script > pre-deploy.sh
  chmod oug+x pre-deploy.sh
  rm sed.script
fi

echo "Generating post deployment file from template"
if [ -e "${REPO_NAME}/post-deploy.sh.in" ]; then
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat ${REPO_NAME}/post-deploy.sh.in | sed -f sed.script > post-deploy.sh
  chmod oug+x post-deploy.sh
  rm sed.script
else
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat post-deploy.sh.in | sed -f sed.script > post-deploy.sh
  chmod oug+x post-deploy.sh
  rm sed.script
fi

echo "Generating nvmrc file from template"
if [ -e "${REPO_NAME}/.nvmrc.in" ]; then
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat ${REPO_NAME}/.nvmrc.in | sed -f sed.script > .nvmrc
  rm sed.script
else
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat .nvmrc.in | sed -f sed.script > .nvmrc
  rm sed.script
fi

FORKURL=${FORKURL-https://github.com/RackHD/on-core.git}
if [ "${FORKURL}" != "https://github.com/RackHD/on-core.git" ]; then
  if [ -e "../build/package.json" ]; then
    sed -i "s|"git+${FORKURL}"|"git+${FORKURL}"|" ../build/package.json
  fi
fi

if [ ! -z "${COMMIT}" ]; then
  if [ -e "../build/package.json" ]; then
    if [ "${GIT_REFSPEC}" != "master" ]; then
      sed -i "s|"git+${FORKURL}#${GIT_REFSPEC}"|"git+${FORKURL}#${COMMIT}"|" ../build/package.json
    else
      sed -i "s|"git+${FORKURL}"|"git+${FORKURL}#${COMMIT}"|" ../build/package.json
    fi
  fi
fi

echo "Generating sol-log script file from template"
#BMC_XXX_USER/BMC_XXX_PASSWORD config in jenkins build-config-setup job parameters
#This script generate a BMC_ACCOUNT_LIST="u1/p1 u2/p2 ..." according to these parameters.
bmc_var_name_list=`printenv |grep BMC_ | awk -F '|=' '{print $1}'|xargs`
domain_list=""
for var_name in $bmc_var_name_list; do
  domain=${var_name%_*}
  if [[ "$domain_list" != *"$domain"* ]]; then
    user_var_name=$domain"_USER"
    password_var_name=$domain"_PASSWORD"
    BMC_ACCOUNT_LIST="${!user_var_name}:${!password_var_name} $BMC_ACCOUNT_LIST"
    domain_list="$domain $domain_list"
  fi
done
export BMC_ACCOUNT_LIST
if [ -e "${REPO_NAME}/generate-sol-log.sh.in" ]; then
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat ${REPO_NAME}/generate-sol-log.sh.in | sed -f sed.script > generate-sol-log.sh
  chmod oug+x generate-sol-log.sh
  rm sed.script
else
  env | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script
  cat generate-sol-log.sh.in | sed -f sed.script > generate-sol-log.sh
  chmod oug+x generate-sol-log.sh
  rm sed.script
fi
