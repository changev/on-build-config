node{
    withEnv([
        "branch=${env.branch}",
        "IS_OFFICIAL_RELEASE=false",
        "date=current",
        "timezone=-0500",
        "OS_VER=${env.OS_VER}",
        "TFTP_STATIC_FILES=${env.TFTP_STATIC_FILES}",
        "HTTP_STATIC_FILES=${env.HTTP_STATIC_FILES}",
        "USE_VCOMPUTE=${env.USE_VCOMPUTE}",
        "TESTS=${env.TESTS}",
        "OVA_POST_TESTS=${env.OVA_POST_TESTS}",
        "BINTRAY_SUBJECT=${env.BINTRAY_SUBJECT}",
        "CI_BINTRAY_SUBJECT=${env.CI_BINTRAY_SUBJECT}",
        "PUBLISH=${env.PUBLISH}"
    ]){
        deleteDir()
        checkout scm
        def shareMethod = load("jobs/ShareMethod.groovy")
        try{
                build job: env.MERGE_FREEZER_TRIGGER, parameters: [[$class: 'StringParameterValue', name: 'MANUAL', value:"false"],[$class: 'BooleanParameterValue', name: 'FREEZE_OR_UNFREEZE', value:false]]
        } catch(error){
            echo "$error"
            // trigger freeze procedure
            build job: env.MERGE_FREEZER_TRIGGER, parameters: [[$class: 'StringParameterValue', name: 'MANUAL', value:"false"],[$class: 'BooleanParameterValue', name: 'FREEZE_OR_UNFREEZE', value:true]]
        } finally{
            shareMethod.sendResult(true, true)
        }
    }
}
